角色管理
================================

新建角色
--------------------------------

- POST api/role/

- 注意事项::

    1.添加的时候只支持单个添加
    2.permission参数为列表格式，列表内容为权限id
    3.添加所属权限时，列表里必须要带上所有需要放开的权限
    4.添加的权限必须为最后一个级别的权限

- 请求参数::

    {
        "role_name":"单位管理员",  # 角色名称 | str | 必填 |
        "permission":[30,31]  # 权限列表 | list | 必填 |
    }

- 响应结果::

    {
        "data": [],
        "message": "创建成功",
        "code": 200
    }


查看角色
--------------------------------

- GET api/role/

- 请求参数::

   {
    "name":"单位管理员",  # 角色名称 | str | 选填 | 模糊匹配 |
    "status":"1"  # 状态 | str | 选填 | 1:启用，0:停用 |
    }

- 响应结果::

    {
        "data": [
            {
                "id": 5,
                "role_name": "测试角色-添加",
                "status": "1",
                "cst_update": "2021-09-02 11:07:39",
                "permission": [
                    {
                        "id": 30, # 权限id
                        "parent_id": 23,  # 上级权限id
                        "permissions_name": "查看用户"  # 权限名称
                    }
                ],
                "user_count": 0  # 使用当前角色的用户数量
            }
        ],
        "message": "success",
        "code": 200
    }


编辑角色
--------------------------------

- PATCH api/role/{id}/

- 注意事项::

    1.只支持单个编辑
    2.编辑所属权限时，列表里必须要带上所有需要放开的权限
    3.url的id参数代表要编辑的角色id
- 请求参数::

   {
    "role_name":"测试角色-编辑",  # 角色名称 | str | 选填 | |
    "status":"1",  # 状态 | str | 选填 | 1:启用，0:停用 |
    "cst_update":"2021-08-31 16:06:35",  # 更新时间 | datetime | 选填 | 默认为更新时的当前时间 |
    "permission":[25,26,27,28,29,30,31,32,33,34]  # 权限列表 | list | 选填 |
    }

- 响应结果::

    {
        "message": "编辑成功",
        "code": 200,
        "data": {
            "id": 1,
            "role_name": "超级管理员",
            "status": "1",
            "cst_update": "2021-08-31 16:06:35",
            "permission": [
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34
            ]
        }
    }

删除角色
--------------------------------

- DELETE api/role/{id}/

- 注意事项::

    1.只支持单个删除
    2.删除角色时，如果角色有用户使用，则需要带上参数is_delete再请求，即可删除
    3.url的id参数代表要删除的角色id

- 请求参数::

   {"is_delete":1}

- 响应结果::

    {
        "data": [],
        "message": "删除成功",
        "code": 200
    }

查看权限
--------------------------------

- GET api/role/{id}/

- 注意事项::

    1.只支持单个编辑
    2.编辑所属权限时，列表里必须要带上所有需要放开的权限

- 请求参数::

    无

- 响应结果::

    {
    "message": "success",
    "code": 200,
    "data": [
        {
                "id": 24,  # 权限id
                "permissions_name": "单位管理",  # 权限名称
                "p_id": 19,  # 上级权限id
                "p_name": "组织管理",  # 上级权限名称
                "children": [   # 下级权限
                    {
                        "id": 31,
                        "permissions_name": "新增单位",
                        "p_id": 24,
                        "p_name": "单位管理",
                        "children": []
                    },
                    {
                        "id": 32,
                        "permissions_name": "查看单位",
                        "p_id": 24,
                        "p_name": "单位管理",
                        "children": []
                    },
                    {
                        "id": 33,
                        "permissions_name": "编辑单位",
                        "p_id": 24,
                        "p_name": "单位管理",
                        "children": []
                    },
                    {
                        "id": 34,
                        "permissions_name": "删除单位",
                        "p_id": 24,
                        "p_name": "单位管理",
                        "children": []
                    }
                ]
            }
        ]
    }
