# Generated by Django 3.1.13 on 2022-04-15 16:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DirectoryBlast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hit_time', models.DateTimeField(verbose_name='发现时间')),
                ('source_ip', models.GenericIPAddressField(db_index=True, verbose_name='IP')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='port')),
                ('host', models.CharField(db_index=True, max_length=255, verbose_name='host')),
                ('title', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='标题')),
                ('dir_num', models.IntegerField(blank=True, db_index=True, default=0, null=True, verbose_name='目录数')),
                ('len', models.CharField(default='', max_length=20, verbose_name='长度')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='状态码')),
                ('raw_data', models.JSONField(blank=True, default=dict, null=True, verbose_name='原始数据')),
            ],
            options={
                'verbose_name': '目录爆破',
                'verbose_name_plural': '目录爆破',
                'db_table': 'syfz_ts_dir_blast',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ScanPort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hit_time', models.DateTimeField(verbose_name='发现时间')),
                ('source_ip', models.GenericIPAddressField(db_index=True, verbose_name='IP')),
                ('ports', models.JSONField(blank=True, default=list, null=True, verbose_name='值')),
                ('raw_data', models.JSONField(blank=True, default=dict, null=True, verbose_name='原始数据')),
            ],
            options={
                'verbose_name': '端口扫描',
                'verbose_name_plural': '端口扫描',
                'db_table': 'syfz_ts_scan_port',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hit_time', models.DateTimeField(verbose_name='发现时间')),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='漏洞名称')),
                ('cve_num', models.CharField(db_index=True, max_length=255, verbose_name='漏洞编号')),
                ('source_ip', models.GenericIPAddressField(db_index=True, verbose_name='IP')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='port')),
                ('vul_site', models.CharField(db_index=True, max_length=255, verbose_name='漏洞地址')),
                ('vul_principle', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='漏洞原理')),
                ('utilization_way', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='利用方式')),
                ('raw_data', models.JSONField(blank=True, default=dict, null=True, verbose_name='原始数据')),
            ],
            options={
                'verbose_name': '漏洞检测-漏洞',
                'verbose_name_plural': '漏洞检测-漏洞',
                'db_table': 'syfz_ts_vulnerability',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WeakPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hit_time', models.DateTimeField(blank=True, null=True, verbose_name='发现时间')),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='漏洞名称')),
                ('cve_num', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='漏洞编号')),
                ('source_ip', models.GenericIPAddressField(db_index=True, verbose_name='IP')),
                ('port', models.IntegerField(db_index=True, verbose_name='端口号')),
                ('sever', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='服务')),
                ('password', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='密码')),
                ('raw_data', models.JSONField(blank=True, default=dict, null=True, verbose_name='原始数据')),
            ],
            options={
                'verbose_name': '漏洞检测-弱口令',
                'verbose_name_plural': '漏洞检测-弱口令',
                'db_table': 'syfz_ts_weak_psw',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WebServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_ip', models.GenericIPAddressField(db_index=True, verbose_name='IP')),
                ('hit_time', models.DateTimeField(verbose_name='发现时间')),
                ('site', models.CharField(db_index=True, max_length=255, verbose_name='站点')),
                ('title', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='标题')),
                ('header', models.TextField(blank=True, null=True, verbose_name='header')),
                ('fingerprint', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='指纹')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='状态码')),
                ('screenshot', models.TextField(blank=True, null=True, verbose_name='截图base64')),
                ('raw_data', models.JSONField(blank=True, default=dict, null=True, verbose_name='原始数据')),
            ],
            options={
                'verbose_name': 'web服务识别',
                'verbose_name_plural': 'web服务识别',
                'db_table': 'syfz_ts_web_server',
                'ordering': ['-id'],
            },
        ),
    ]
